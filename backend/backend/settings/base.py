"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 3.2.15.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--31=fl*fhw5eb6732jce@y9v!$(o9fkz=ujb(2&i3cfhc&@(a!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

is_localhost = os.environ.get('HOST', '127.0.0.1') == '127.0.0.1'
if is_localhost:
    host = '127.0.0.1'
    full_host_url = 'http://127.0.0.1'
    frontend_url = 'http://127.0.0.1:3000'
    backend_url = 'http://127.0.0.1:8000'
else:
    host = os.environ.get('HOST', '127.0.0.1')
    full_host_url = f'https://{host}'
    frontend_url = full_host_url.replace('api.', '')
    backend_url = full_host_url

ALLOWED_HOSTS = ['.localhost', host]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'apps.users',
    'apps.models',
    'rest_framework',
    'django_filters'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {        
        'ENGINE': 'django.db.backends.mysql',
        'NAME': config('DB_NAME'),
        'ENFORCE_SCHEMA': False,
        'USER': config('DB_USERNAME'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DB_HOST'),
        'PORT': config('DB_PORT'),
        'OPTIONS': {
            'init_command': "SET default_storage_engine='INNODB'",
            'charset': 'utf8mb4',  # <--- Use this
    }},
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR.parent, 'static')
STATIC_URL = '/static/'
# STATIC_URL = 'http://127.0.0.1:8000/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/setings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = 'users.User'

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],

    # 'COMPONENT_SPLIT_REQUEST': True,
    # 'DEFAULT_SCHEMA_CLASS': '',
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser'
    ],
    # 'DEFAULT_THROTTLE_CLASSES': [
    #     'lib.common.throttles.CustomUserRateThrottle',
    #     'lib.common.throttles.CustomAnonRateThrottle'
    #     # 'rest_framework.throttling.UserRateThrottle',
    #     # 'rest_framework.throttling.AnonRateThrottle'
    # ],
    # 'DEFAULT_THROTTLE_RATES': {
    #     'anon': '2/min',
    #     'user': '3/min'
    # },
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend'
    ]
    # 'DEFAULT_AUTHENTICATION_CLASSES': [
    #     'rest_framework.authentication.BasicAuthentication'
    # ],
    
}
# LOGGING
log_dir = config('DJANGO_LOG_DIR')
def generate_log_file(prefix_name):
    global log_dir
    if not os.path.isdir(log_dir):
        os.mkdir(log_dir)
    # logs_filename = f"backend_{datetime.datetime.now().strftime('%Y_%m_%d_%I_%M_%S_%p')}.log"
    # log_filename = f"{prefix_name}_{datetime.datetime.utcnow().strftime('%Y_%m_%d')}.log"
    log_filename = f"{prefix_name}.log"
    #%H_%M_%S
    log_filepath = log_dir + "/" + log_filename
    if os.path.exists(log_filepath):
        log_f = open(log_filepath, 'w')
        log_f.seek(0)
        log_f.truncate()
        log_f.flush()
        log_f.close()
    return Path(log_filepath)

mt_log_filepath = generate_log_file('django')
# dj_lfp = generate_log_file('dj')
# dj_requests_lfp = generate_log_file('dj_requests')
# dj_server_lfp = generate_log_file('dj_server')
# dj_security_lfp = generate_log_file('dj_security')

LOGGING_LEVEL = config('DJANGO_LOG_LEVEL', default = 'DEBUG', cast=str)
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'console' : {
            'format': '{asctime}: {levelname}: {message} ',
            'style': '{',
            'datefmt': '%Y-%m-%d %H:%M:%S'
        },
        'file': {
            'format': '{asctime}: {levelname}: {message} ',
            'style': '{',
            'datefmt': '%Y-%m-%d %H:%M:%S'
        },
        'request_fm': {
            'format': '{asctime}: {levelname}: {request} with status code {status_code} {message}',
            'style': '{',
            'datefmt': '%Y-%m-%d %H:%M:%S'
        }
    },
    'handlers': {
        'console_handler': {
            'class': 'logging.StreamHandler',
            'formatter': 'console'
        },
        'mt_log_handler': {
            'class': 'logging.FileHandler',
            'formatter': 'file',
            'filename': mt_log_filepath
        },
        # 'dj_requests_lfp_handler': {
        #     'class': 'logging.FileHandler',
        #     'formatter': 'request_fm',
        #     'filename': dj_requests_lfp
        # },
        # 'dj_server_lfp_handler': {
        #     'class': 'logging.FileHandler',
        #     'formatter': 'request_fm',
        #     'filename': dj_server_lfp
        # },
        # 'dj_security_lfp_handler': {
        #     'class': 'logging.FileHandler',
        #     'formatter': 'file',
        #     'filename': dj_security_lfp
        # }
    },
    'loggers': {
        'mt_loader': {
            'handlers': ['console_handler', 'mt_log_handler'],
            'level': config('DJANGO_LOG_LEVEL', default = 'DEBUG', cast=str),
        },
        'django': {
            'handlers': ['console_handler'],
            'level': 'INFO',
            'propagate': False,
        },
        'django.request': {
            'handlers': ['console_handler'],
            'level': 'DEBUG',
            'propagate': False
        },
        # 'django.server': {
        #     'handler': ['console_handler', 'dj_server_lfp_handler'],
        #     'level': 'DEBUG',
        #     'propagate': True
        # },
        # 'django.security.*': {
        #     'handler': ['dj_security_lfp_handler'],
        #     'level': 'DEBUG',
        #     'propagate': True
        # },
    },
}

CACHE_KEY_PREFIX = "django.contrib.sessions.cache"